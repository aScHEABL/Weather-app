{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAe;AACf,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtBe;AACf;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;ACRe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D;AACA;AACA;AACA;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACN4C;AACkB;AAChB;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,0DAAa;AAC5B;AACA;AACA,4BAA4B,kEAAuB;AACnD;AACA;AACA,MAAM;AACN,CAAC,C","sources":["webpack://weather-app/./src/geoLocationConvertAPI.js","webpack://weather-app/./src/stringChecker.js","webpack://weather-app/./src/weatherDataAPI.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/make namespace object","webpack://weather-app/./src/index.js"],"sourcesContent":["export default async function geoLocationConverterAPI(cityName) {\n  console.log(`Search for ${cityName}`)\n  const limitNumber = 1;\n  const apiKey = \"9b708ac24f65eeeba73e728c5a9e1d80\";\n  const apiCall = \"http://api.openweathermap.org/geo/1.0/direct?q=\" +\n  cityName +\n  \"&limit=\" +\n  limitNumber +\n  \"&appid=\" +\n  apiKey;\n\n  const response = await fetch(apiCall, { mode: \"cors\"});\n  const geoData = await response.json();\n  let coordinates = {\n    lat: 0,\n    lon: 0\n  }\n\n  coordinates.lat = geoData[0].lat;\n  coordinates.lon = geoData[0].lon;\n\n  return coordinates;\n}","export default function stringChecker(string) {\n    if (string.length === 0) {\n        console.log(\"Search input is empty.\");\n        return false\n    } else {\n    const whiteSpaceInTheMiddle = /\\b\\s+\\b/g;\n    return string = string.replaceAll(whiteSpaceInTheMiddle, \"+\");\n    }\n}","export default async function weatherDataAPI(coordinateLat, coordinateLon) {\n    const apiKey = \"9b708ac24f65eeeba73e728c5a9e1d80\";\n    const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat=\"\n    coordinateLat +\n    \"&lon=\" + \n    coordinateLon + \n    \"&appid=\" + \n    apiKey;\n    \n    // const response = await fetch(apiCall, { mode: \"cors\"});\n    // const weatherData = await response.json();\n    // console.log(apiCall);\n    console.log(coordinateLat);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import stringChecker from \"./stringChecker\";\nimport geoLocationConverterAPI from \"./geoLocationConvertAPI\";\nimport weatherDataAPI from \"./weatherDataAPI\";\n\nconst searchInput_DOM = document.querySelector(\"[data-search-input]\");\nconst searchButton_DOM = document.querySelector(\"[data-search-button]\");\nlet cityName = \"\";\n\nsearchButton_DOM.addEventListener(\"click\", () => {\n    console.log(\"Search button has been clicked.\");\n    cityName = searchInput_DOM.value;\n    //check if the search input is empty, if not then convert space to +\n    cityName = stringChecker(cityName);\n    // if boolean returns true, search for the city, if false exit the function\n    if (cityName) {\n        const coordinates = geoLocationConverterAPI(cityName);\n        console.log(coordinates);\n        // weatherDataAPI(coordinates.lat, coordinates.lon);\n    } else return\n})"],"names":[],"sourceRoot":""}