{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAoC;;AAErB;AACf,iBAAiB,uDAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,cAAc;AACxD;;AAEA;AACA,yBAAyB,gBAAgB,OAAO,eAAe;AAC/D;AACA,EAAE,4DAA6B;AAC/B,EAAE,4DAA6B;AAC/B,sBAAsB,4DAA6B,EAAE,OAAO,4DAA6B,CAAC;AAC1F;AACA;AACA;;;;;;;;;;;;;;;;;;ACzBA;AAC4D;AAChB;AACE;;AAEvC;AACP;AACA;AACA;AACA;;AAEA,2DAAa;AACb,kEAAqB;AACrB;AACA,oBAAoB,+BAA+B,OAAO,8BAA8B;AACxF;AACA;;;;;;;;;;;;;;;AChBoC;;AAErB;AACf,mBAAmB,uDAAwB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,uDAAwB;AAC5B;;;;;;;;;;;;;;;;ACZoC;;AAErB;AACf,0BAA0B,4DAA6B;AACvD,0BAA0B,4DAA6B;AACvD;AACA,6EAA6E,IAAI,MAAM,IAAI,QAAQ,QAAQ;AAC3G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,eAAe,OAAO,cAAc;AAC5D;;;;;;UChBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://weather-app/./src/geoLocationConvertAPI.js","webpack://weather-app/./src/index.js","webpack://weather-app/./src/stringChecker.js","webpack://weather-app/./src/weatherDataAPI.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/make namespace object","webpack://weather-app/webpack/before-startup","webpack://weather-app/webpack/startup","webpack://weather-app/webpack/after-startup"],"sourcesContent":["import { globalVariables } from \".\";\n\nexport default async function geoLocationConvertAPI() {\n  let cityName = globalVariables.cityName;\n  const limitNumber = \"1\";\n  const apiKey = \"9b708ac24f65eeeba73e728c5a9e1d80\";\n  const apiCall =\n    \"http://api.openweathermap.org/geo/1.0/direct?q=\" +\n    cityName +\n    \"&limit=\" +\n    limitNumber +\n    \"&appid=\" +\n    apiKey;\n\n  const response = await fetch(apiCall, { mode: \"cors\" });\n  const geoData = await response.json();\n\n  // console.log(geoData);\n  // console.log(`Lat: ${geoData[0].lat} Lon: ${geoData[0].lon}`);\n  \n  globalVariables.coordinateLat = geoData[0].lat;\n  globalVariables.coordinateLon = geoData[0].lon;\n  console.log(`Lat: ${globalVariables.coordinateLat} Lon: ${globalVariables.coordinateLon}`);\n  console.log(typeof geoData[0].lat)\n  console.log(typeof geoData[0].lon)\n}\n","console.log(\"Hello World!\");\nimport geoLocationConvertAPI from \"./geoLocationConvertAPI\";\nimport stringChecker from \"./stringChecker\";\nimport weatherDataAPI from \"./weatherDataAPI\";\n\nexport let globalVariables = {\n    cityName : \"hong kong\",\n    coordinateLat : 0,\n    coordinateLon : 0\n}\n\nstringChecker();\ngeoLocationConvertAPI();\nconsole.log(globalVariables.cityName);\nconsole.log(`Lat: ${globalVariables.coordinateLat} Lon: ${globalVariables.coordinateLon}`);\nconsole.log(typeof globalVariables.coordinateLat);\n// weatherDataAPI();","import { globalVariables } from \".\";\n\nexport default function stringChecker() {\n    let cityName = globalVariables.cityName;\n    // regExp rules\n    const whiteSpaceInTheMiddle = /\\b\\s+\\b/g;\n\n    whiteSpaceInTheMiddle.test(cityName) ? concatString() : false;\n    function concatString() {\n        cityName = cityName.replaceAll(whiteSpaceInTheMiddle, \"+\");\n    }\n    globalVariables.cityName = cityName;\n}\n","import { globalVariables } from \".\";\n\nexport default async function weatherDataAPI() {\n    const coordinateLat = globalVariables.coordinateLat;\n    const coordinateLon = globalVariables.coordinateLon;\n    const apiKey = \"9b708ac24f65eeeba73e728c5a9e1d80\";\n    // const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\";\n    const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat=\"\n    coordinateLat +\n    \"&lon=\" + \n    coordinateLon + \n    \"&appid=\" + \n    apiKey;\n\n    // console.log(apiCall);\n    console.log(`Lat: ${coordinateLat} Lon: ${coordinateLon}`)\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":[],"sourceRoot":""}