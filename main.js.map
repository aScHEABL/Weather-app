{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAoC;AACpC;AACe;AACf,iBAAiB,uDAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAA6B;AAC3D;;;;;;;;;;;;;;;;;;AC3Ba;AACb;AACA;AAC4D;AAChB;AACE;AAC9C;AACO;AACP;AACA;AACA;AACA,2DAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfoC;AACpC;AACe;AACf,mBAAmB,uDAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAwB;AAC5B;;;;;;;;;;;;;;;;ACZoC;AACpC;AACe;AACf,0BAA0B,4DAA6B;AACvD,0BAA0B,4DAA6B;AACvD;AACA,6EAA6E,IAAI,MAAM,IAAI,QAAQ,QAAQ;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe,OAAO,cAAc;AAC5D;;;;;;UChBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://weather-app/./src/geoLocationConvertAPI.js","webpack://weather-app/./src/index.js","webpack://weather-app/./src/stringChecker.js","webpack://weather-app/./src/weatherDataAPI.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/make namespace object","webpack://weather-app/webpack/before-startup","webpack://weather-app/webpack/startup","webpack://weather-app/webpack/after-startup"],"sourcesContent":["import { globalVariables } from \".\";\r\n\r\nexport default async function geoLocationConvertAPI() {\r\n  let cityName = globalVariables.cityName;\r\n  const limitNumber = \"1\";\r\n  const apiKey = \"9b708ac24f65eeeba73e728c5a9e1d80\";\r\n  const apiCall =\r\n    \"http://api.openweathermap.org/geo/1.0/direct?q=\" +\r\n    cityName +\r\n    \"&limit=\" +\r\n    limitNumber +\r\n    \"&appid=\" +\r\n    apiKey;\r\n\r\n  const response = await fetch(apiCall, { mode: \"cors\" });\r\n  const geoData = await response.json();\r\n  \r\n  const getLat = () => {\r\n    return geoData[0].lat;\r\n  }\r\n  const getLon = () => {\r\n    return geoData[0].lon;\r\n  }\r\n\r\n  const coordinateLat = getLat();\r\n\r\n  coordinateLat.then((lat) => globalVariables.coordinateLat = lat)\r\n}\r\n","'use strict';\r\n\r\nconsole.log(\"Hello World!\");\r\nimport geoLocationConvertAPI from \"./geoLocationConvertAPI\";\r\nimport stringChecker from \"./stringChecker\";\r\nimport weatherDataAPI from \"./weatherDataAPI\";\r\n\r\nexport let globalVariables = {\r\n    cityName : \"hong kong\"\r\n}\r\n\r\nstringChecker();\r\n// geoLocationConvertAPI();\r\n// weatherDataAPI();\r\n\r\nconsole.log(globalVariables);","import { globalVariables } from \".\";\r\n\r\nexport default function stringChecker() {\r\n    let cityName = globalVariables.cityName;\r\n    // regExp rules\r\n    const whiteSpaceInTheMiddle = /\\b\\s+\\b/g;\r\n\r\n    whiteSpaceInTheMiddle.test(cityName) ? concatString() : false;\r\n    function concatString() {\r\n        cityName = cityName.replaceAll(whiteSpaceInTheMiddle, \"+\");\r\n    }\r\n    globalVariables.cityName = cityName;\r\n}\r\n","import { globalVariables } from \".\";\r\n\r\nexport default async function weatherDataAPI() {\r\n    const coordinateLat = globalVariables.coordinateLat;\r\n    const coordinateLon = globalVariables.coordinateLon;\r\n    const apiKey = \"9b708ac24f65eeeba73e728c5a9e1d80\";\r\n    // const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\";\r\n    const apiCall = \"https://api.openweathermap.org/data/2.5/weather?lat=\"\r\n    coordinateLat +\r\n    \"&lon=\" + \r\n    coordinateLon + \r\n    \"&appid=\" + \r\n    apiKey;\r\n\r\n    // console.log(apiCall);\r\n    console.log(`Lat: ${coordinateLat} Lon: ${coordinateLon}`)\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":[],"sourceRoot":""}