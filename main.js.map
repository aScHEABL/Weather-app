{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCVA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNgD;AACJ;AAC5C;AACA;AACA;AACA,WAAW,0DAAa;AACxB,yDAAkB,W","sources":["webpack://weather-app/./src/geocodingAPI.js","webpack://weather-app/./src/stringChecker.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/make namespace object","webpack://weather-app/./src/index.js"],"sourcesContent":["export default async function geoLocationConvert(cityName) {\r\n  const limitNumber = \"1\";\r\n  const apiKey = \"9b708ac24f65eeeba73e728c5a9e1d80\";\r\n  const apiCall =\r\n    \"http://api.openweathermap.org/geo/1.0/direct?q=\" +\r\n    cityName +\r\n    \"&limit=\" +\r\n    limitNumber +\r\n    \"&appid=\" +\r\n    apiKey;\r\n\r\n  // const response = await fetch(apiCall, { mode: \"cors\" });\r\n  // const geoData = await response.json();\r\n  // console.log(geoData);\r\n  console.log(geoData.coord.lon, geoData.coord.lat);\r\n}\r\n","export default function stringChecker(string) {\r\n    let cityName = string;\r\n    // regExp rules\r\n    const whiteSpaceInTheMiddle = /\\b\\s+\\b/g;\r\n\r\n    whiteSpaceInTheMiddle.test(cityName) ? concatString() : false;\r\n    function concatString() {\r\n        cityName = cityName.replace(whiteSpaceInTheMiddle, \"+\");\r\n    }\r\n    return cityName;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import geoLocationConvert from \"./geocodingAPI\";\r\nimport stringChecker from \"./stringChecker\";\r\n\r\nlet cityName = \"hong kong\";\r\n\r\ncityName = stringChecker(cityName);\r\ngeoLocationConvert(cityName);"],"names":[],"sourceRoot":""}